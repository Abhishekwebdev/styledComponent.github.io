{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekpatel/Documents/web/newest/styled-components-v5-master/src/components/pages/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { PageLayout, Input, PasswordInput, Button, Spinner } from 'components/common';\nimport styled from 'styled-components';\nconst Form = styled.form`\n    width: 100%;\n    max-width: 400px;\n    background: white;\n    border: 1px solid #eee;\n    padding: 16px;\n    box-sizing: border-box;\n    color: black;\n    border-radius: 4px;\n\n    .alt-text{\n        text-align: center;\n        margin: 10px 0;\n    }\n`;\nlet timeout;\nexport default function Login() {\n  const [formFields, setFormFields] = useState({\n    username: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  function handleInputChange(e) {\n    e.persist();\n    setFormFields(s => ({ ...s,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    timeout = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }\n\n  useEffect(() => {\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(PageLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    value: formFields.username,\n    onChange: handleInputChange,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PasswordInput, {\n    value: formFields.password,\n    onChange: handleInputChange,\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    large: true,\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, loading ? 'Loading...' : 'Login'), !loading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alt-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Register\"))));\n}","map":{"version":3,"sources":["/Users/abhishekpatel/Documents/web/newest/styled-components-v5-master/src/components/pages/Login.js"],"names":["React","useState","useEffect","PageLayout","Input","PasswordInput","Button","Spinner","styled","Form","form","timeout","Login","formFields","setFormFields","username","password","loading","setLoading","handleInputChange","e","persist","s","target","name","value","handleSubmit","preventDefault","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {PageLayout, Input, PasswordInput, Button, Spinner} from 'components/common';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n    width: 100%;\n    max-width: 400px;\n    background: white;\n    border: 1px solid #eee;\n    padding: 16px;\n    box-sizing: border-box;\n    color: black;\n    border-radius: 4px;\n\n    .alt-text{\n        text-align: center;\n        margin: 10px 0;\n    }\n`;\n\nlet timeout;\n\nexport default function Login(){\n    const [formFields, setFormFields] = useState({username: '', password: ''});\n    const [loading, setLoading] = useState(false);\n\n    function handleInputChange(e){\n        e.persist();\n        setFormFields(s => ({\n            ...s,\n            [e.target.name]: e.target.value\n        }));\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        setLoading(true);\n        timeout = setTimeout(() => {\n            setLoading(false);\n        }, 2000);\n    }\n\n    useEffect(() => {\n        return ()=> {\n            if(timeout){\n                clearTimeout(timeout);\n            }\n        }\n    }, []);\n\n    return (\n        <PageLayout>\n            <h1>\n                Login\n            </h1>\n            <Form onSubmit={handleSubmit}>\n                {loading ? <Spinner /> : \n                <>\n                <Input \n                    value={formFields.username}\n                    onChange={handleInputChange}\n                    name=\"username\" \n                    type=\"text\"\n                    placeholder=\"Username\" />\n                <PasswordInput \n                    value={formFields.password}\n                    onChange={handleInputChange}\n                    name=\"password\" />\n                </>\n                }\n                <Button large type=\"submit\" disabled={loading}>\n                    {loading ? 'Loading...' : 'Login'}\n                </Button>\n                {!loading &&\n                <>\n                <div className=\"alt-text\">\n                    or\n                </div>\n                <Button secondary type=\"button\">\n                    Register\n                </Button>\n                </>\n                }\n            </Form>\n        </PageLayout>\n    )\n}"]},"metadata":{},"sourceType":"module"}